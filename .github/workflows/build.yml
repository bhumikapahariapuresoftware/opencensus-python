name: Build

on:
  push:
    branches-ignore:
    - 'release/*'
  pull_request:
    branches:
      - master

jobs:
  build:
    # 18.04 needed for python3.4
    runs-on: ubuntu-18.04
    env:
      # We use these variables to convert between tox and GHA version literals
      py38: 3.8
    strategy:
      # ensures the entire test matrix is run, even if one permutation fails
      fail-fast: false
      matrix:
        python-version: [ py38 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env[matrix.python-version] }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env[matrix.python-version] }}
      - name: Install tox
        run: pip install -U tox-factor
      - name: Cache tox environment
        uses: actions/cache@v2
        with:
          path: .tox
          # bump version prefix to fully reset caches
          key: v1-tox-${{ matrix.python-version }}-${{ hashFiles('tox.ini', '**/setup.py') }}
      - name: run tox
        run: tox -f ${{ matrix.python-version }}

  armv64_py38_job:
      name: Build and Test for arm64 with py38
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl git && \
              ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              python3 --version && \
              uname -m && \
              whoami && \
              pwd && \
              ls && \
              pip install -U tox-factor && \
              python setup.py install && \
              tox -f py38 && \
              deactivate'
